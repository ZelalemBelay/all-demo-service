name: Build and Deploy Spring Boot App to Remote Debian Docker Host

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'  # Change based on your project's Java version

    - name: Build with Maven
      run: |
          cd adey-security
          mvn clean package -DskipTests

    # - name: Set up SSH
    #   uses: webfactory/ssh-agent@v0.7.0
    #   with:
    #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # Deploy to GCP VM
    - name: Deploy to GCP VM
      env:
        REMOTE_USER: ${{ secrets.REMOTE_USER }}      # Update with your remote SSH user
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}      # Update with your VM's external IP
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Add private key to GitHub Secrets
      run: |
        echo ${{ secrets.REMOTE_HOST }} ${{ secrets.REMOTE_USER }} 
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $REMOTE_USER@$REMOTE_HOST << 'EOF'
          docker stop myapp || true
          docker rm myapp || true
          docker rmi myapp:latest || true
          echo "FROM openjdk:17-jdk-slim\nCOPY app.jar app.jar\nENTRYPOINT [\"java\", \"-jar\", \"/app.jar\"]" > Dockerfile
          docker build -t myapp:latest .
          docker run -d -p 8080:8080 --name myapp myapp:latest
        EOF
